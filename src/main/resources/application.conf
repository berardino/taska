akka {
  loglevel = DEBUG

  actor {
    provider = cluster

    serialization-bindings {
      "taska.serialization.CborSerializable" = jackson-cbor
    }
  }

  remote.artery.canonical {
    hostname = "127.0.0.1"
    port = 2551
  }


  cluster {
    seed-nodes = [
      "akka://TaskaSystem@127.0.0.1:2551"
    ]

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  roles = ["write-model", "read-model"]

  downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"

  persistence {
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"
  }

  http {
    server {
      preview.enable-http2 = on
    }
  }
}

akka-persistence-jdbc {
  shared-databases {
    slick = ${slick}
  }
}

jdbc-journal {
  use-shared-db = "slick"
  slick = ${slick}
}

jdbc-snapshot-store {
  use-shared-db = "slick"
  slick = ${slick}
}

jdbc-read-journal {
  use-shared-db = "slick"
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db: ${db}
}

db {
  url = "jdbc:postgresql://localhost:5432/taska"
  user = "taska"
  password = "taska"
  driver = "org.postgresql.Driver"
}

event-processor {
  tag-prefix = "taska-slice"
  parallelism = 4
}

grpc {
  server {
    hostname = "127.0.0.1"
    port = 8080
  }
}

