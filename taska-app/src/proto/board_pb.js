// source: board.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

var google_protobuf_wrappers_pb = require("google-protobuf/google/protobuf/wrappers_pb.js");
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol("proto.taska.proto.ArchiveBoardReq", null, global);
goog.exportSymbol("proto.taska.proto.ArchiveBoardRes", null, global);
goog.exportSymbol("proto.taska.proto.CreateBoardReq", null, global);
goog.exportSymbol("proto.taska.proto.CreateBoardRes", null, global);
goog.exportSymbol("proto.taska.proto.GetBoardReq", null, global);
goog.exportSymbol("proto.taska.proto.GetBoardRes", null, global);
goog.exportSymbol("proto.taska.proto.UnArchiveBoardReq", null, global);
goog.exportSymbol("proto.taska.proto.UnArchiveBoardRes", null, global);
goog.exportSymbol("proto.taska.proto.UpdateBoardReq", null, global);
goog.exportSymbol(
  "proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp",
  null,
  global
);
goog.exportSymbol(
  "proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp",
  null,
  global
);
goog.exportSymbol("proto.taska.proto.UpdateBoardReq.Update", null, global);
goog.exportSymbol(
  "proto.taska.proto.UpdateBoardReq.Update.CmdCase",
  null,
  global
);
goog.exportSymbol("proto.taska.proto.UpdateBoardRes", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.CreateBoardReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.CreateBoardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.CreateBoardReq.displayName =
    "proto.taska.proto.CreateBoardReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.CreateBoardRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.CreateBoardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.CreateBoardRes.displayName =
    "proto.taska.proto.CreateBoardRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.GetBoardReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.GetBoardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.GetBoardReq.displayName = "proto.taska.proto.GetBoardReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.GetBoardRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.GetBoardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.GetBoardRes.displayName = "proto.taska.proto.GetBoardRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.ArchiveBoardReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.ArchiveBoardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.ArchiveBoardReq.displayName =
    "proto.taska.proto.ArchiveBoardReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.ArchiveBoardRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.ArchiveBoardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.ArchiveBoardRes.displayName =
    "proto.taska.proto.ArchiveBoardRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UnArchiveBoardReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.UnArchiveBoardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UnArchiveBoardReq.displayName =
    "proto.taska.proto.UnArchiveBoardReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UnArchiveBoardRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.UnArchiveBoardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UnArchiveBoardRes.displayName =
    "proto.taska.proto.UnArchiveBoardRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UpdateBoardReq = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.taska.proto.UpdateBoardReq.repeatedFields_,
    null
  );
};
goog.inherits(proto.taska.proto.UpdateBoardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UpdateBoardReq.displayName =
    "proto.taska.proto.UpdateBoardReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UpdateBoardReq.Update = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    null,
    proto.taska.proto.UpdateBoardReq.Update.oneofGroups_
  );
};
goog.inherits(proto.taska.proto.UpdateBoardReq.Update, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UpdateBoardReq.Update.displayName =
    "proto.taska.proto.UpdateBoardReq.Update";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.displayName =
    "proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp = function (
  opt_data
) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.displayName =
    "proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UpdateBoardRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.UpdateBoardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UpdateBoardRes.displayName =
    "proto.taska.proto.UpdateBoardRes";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.CreateBoardReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.CreateBoardReq.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.CreateBoardReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.CreateBoardReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        title: jspb.Message.getFieldWithDefault(msg, 1, ""),
        description:
          (f = msg.getDescription()) &&
          google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.CreateBoardReq}
 */
proto.taska.proto.CreateBoardReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.CreateBoardReq();
  return proto.taska.proto.CreateBoardReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.CreateBoardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.CreateBoardReq}
 */
proto.taska.proto.CreateBoardReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 2:
        var value = new google_protobuf_wrappers_pb.StringValue();
        reader.readMessage(
          value,
          google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader
        );
        msg.setDescription(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.CreateBoardReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.CreateBoardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.CreateBoardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.CreateBoardReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};

/**
 * optional string title = 1;
 * @return {string}
 */
proto.taska.proto.CreateBoardReq.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.CreateBoardReq} returns this
 */
proto.taska.proto.CreateBoardReq.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional google.protobuf.StringValue description = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.taska.proto.CreateBoardReq.prototype.getDescription = function () {
  return /** @type{?proto.google.protobuf.StringValue} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_wrappers_pb.StringValue,
    2
  ));
};

/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.taska.proto.CreateBoardReq} returns this
 */
proto.taska.proto.CreateBoardReq.prototype.setDescription = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.taska.proto.CreateBoardReq} returns this
 */
proto.taska.proto.CreateBoardReq.prototype.clearDescription = function () {
  return this.setDescription(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.taska.proto.CreateBoardReq.prototype.hasDescription = function () {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.CreateBoardRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.CreateBoardRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.CreateBoardRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.CreateBoardRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.CreateBoardRes}
 */
proto.taska.proto.CreateBoardRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.CreateBoardRes();
  return proto.taska.proto.CreateBoardRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.CreateBoardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.CreateBoardRes}
 */
proto.taska.proto.CreateBoardRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.CreateBoardRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.CreateBoardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.CreateBoardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.CreateBoardRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.taska.proto.CreateBoardRes.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.CreateBoardRes} returns this
 */
proto.taska.proto.CreateBoardRes.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.GetBoardReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.GetBoardReq.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.GetBoardReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.GetBoardReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.GetBoardReq}
 */
proto.taska.proto.GetBoardReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.GetBoardReq();
  return proto.taska.proto.GetBoardReq.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.GetBoardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.GetBoardReq}
 */
proto.taska.proto.GetBoardReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.GetBoardReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.GetBoardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.GetBoardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.GetBoardReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.taska.proto.GetBoardReq.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.GetBoardReq} returns this
 */
proto.taska.proto.GetBoardReq.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.GetBoardRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.GetBoardRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.GetBoardRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.GetBoardRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        title: jspb.Message.getFieldWithDefault(msg, 1, ""),
        description:
          (f = msg.getDescription()) &&
          google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.GetBoardRes}
 */
proto.taska.proto.GetBoardRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.GetBoardRes();
  return proto.taska.proto.GetBoardRes.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.GetBoardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.GetBoardRes}
 */
proto.taska.proto.GetBoardRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 2:
        var value = new google_protobuf_wrappers_pb.StringValue();
        reader.readMessage(
          value,
          google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader
        );
        msg.setDescription(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.GetBoardRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.GetBoardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.GetBoardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.GetBoardRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};

/**
 * optional string title = 1;
 * @return {string}
 */
proto.taska.proto.GetBoardRes.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.GetBoardRes} returns this
 */
proto.taska.proto.GetBoardRes.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional google.protobuf.StringValue description = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.taska.proto.GetBoardRes.prototype.getDescription = function () {
  return /** @type{?proto.google.protobuf.StringValue} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_wrappers_pb.StringValue,
    2
  ));
};

/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.taska.proto.GetBoardRes} returns this
 */
proto.taska.proto.GetBoardRes.prototype.setDescription = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.taska.proto.GetBoardRes} returns this
 */
proto.taska.proto.GetBoardRes.prototype.clearDescription = function () {
  return this.setDescription(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.taska.proto.GetBoardRes.prototype.hasDescription = function () {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.ArchiveBoardReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.ArchiveBoardReq.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.ArchiveBoardReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.ArchiveBoardReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.ArchiveBoardReq}
 */
proto.taska.proto.ArchiveBoardReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.ArchiveBoardReq();
  return proto.taska.proto.ArchiveBoardReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.ArchiveBoardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.ArchiveBoardReq}
 */
proto.taska.proto.ArchiveBoardReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.ArchiveBoardReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.ArchiveBoardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.ArchiveBoardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.ArchiveBoardReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.taska.proto.ArchiveBoardReq.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.ArchiveBoardReq} returns this
 */
proto.taska.proto.ArchiveBoardReq.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.ArchiveBoardRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.ArchiveBoardRes.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.ArchiveBoardRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.ArchiveBoardRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.ArchiveBoardRes}
 */
proto.taska.proto.ArchiveBoardRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.ArchiveBoardRes();
  return proto.taska.proto.ArchiveBoardRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.ArchiveBoardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.ArchiveBoardRes}
 */
proto.taska.proto.ArchiveBoardRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.ArchiveBoardRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.ArchiveBoardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.ArchiveBoardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.ArchiveBoardRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UnArchiveBoardReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UnArchiveBoardReq.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UnArchiveBoardReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UnArchiveBoardReq.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UnArchiveBoardReq}
 */
proto.taska.proto.UnArchiveBoardReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UnArchiveBoardReq();
  return proto.taska.proto.UnArchiveBoardReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UnArchiveBoardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UnArchiveBoardReq}
 */
proto.taska.proto.UnArchiveBoardReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UnArchiveBoardReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UnArchiveBoardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UnArchiveBoardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UnArchiveBoardReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.taska.proto.UnArchiveBoardReq.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.UnArchiveBoardReq} returns this
 */
proto.taska.proto.UnArchiveBoardReq.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UnArchiveBoardRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UnArchiveBoardRes.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UnArchiveBoardRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UnArchiveBoardRes.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UnArchiveBoardRes}
 */
proto.taska.proto.UnArchiveBoardRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UnArchiveBoardRes();
  return proto.taska.proto.UnArchiveBoardRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UnArchiveBoardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UnArchiveBoardRes}
 */
proto.taska.proto.UnArchiveBoardRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UnArchiveBoardRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UnArchiveBoardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UnArchiveBoardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UnArchiveBoardRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.taska.proto.UpdateBoardReq.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UpdateBoardReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UpdateBoardReq.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UpdateBoardReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UpdateBoardReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
        updatesList: jspb.Message.toObjectList(
          msg.getUpdatesList(),
          proto.taska.proto.UpdateBoardReq.Update.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UpdateBoardReq}
 */
proto.taska.proto.UpdateBoardReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UpdateBoardReq();
  return proto.taska.proto.UpdateBoardReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UpdateBoardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UpdateBoardReq}
 */
proto.taska.proto.UpdateBoardReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = new proto.taska.proto.UpdateBoardReq.Update();
        reader.readMessage(
          value,
          proto.taska.proto.UpdateBoardReq.Update.deserializeBinaryFromReader
        );
        msg.addUpdates(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UpdateBoardReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UpdateBoardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UpdateBoardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UpdateBoardReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.taska.proto.UpdateBoardReq.Update.serializeBinaryToWriter
    );
  }
};

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.taska.proto.UpdateBoardReq.Update.oneofGroups_ = [[1, 2]];

/**
 * @enum {number}
 */
proto.taska.proto.UpdateBoardReq.Update.CmdCase = {
  CMD_NOT_SET: 0,
  P_UPDATE_BOARD_TITLE_CMD: 1,
  P_UPDATE_BOARD_DESCRIPTION_CMD: 2,
};

/**
 * @return {proto.taska.proto.UpdateBoardReq.Update.CmdCase}
 */
proto.taska.proto.UpdateBoardReq.Update.prototype.getCmdCase = function () {
  return /** @type {proto.taska.proto.UpdateBoardReq.Update.CmdCase} */ (jspb.Message.computeOneofCase(
    this,
    proto.taska.proto.UpdateBoardReq.Update.oneofGroups_[0]
  ));
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UpdateBoardReq.Update.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UpdateBoardReq.Update.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UpdateBoardReq.Update} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UpdateBoardReq.Update.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        pUpdateBoardTitleCmd:
          (f = msg.getPUpdateBoardTitleCmd()) &&
          proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.toObject(
            includeInstance,
            f
          ),
        pUpdateBoardDescriptionCmd:
          (f = msg.getPUpdateBoardDescriptionCmd()) &&
          proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.toObject(
            includeInstance,
            f
          ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UpdateBoardReq.Update}
 */
proto.taska.proto.UpdateBoardReq.Update.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UpdateBoardReq.Update();
  return proto.taska.proto.UpdateBoardReq.Update.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UpdateBoardReq.Update} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UpdateBoardReq.Update}
 */
proto.taska.proto.UpdateBoardReq.Update.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp();
        reader.readMessage(
          value,
          proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp
            .deserializeBinaryFromReader
        );
        msg.setPUpdateBoardTitleCmd(value);
        break;
      case 2:
        var value = new proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp();
        reader.readMessage(
          value,
          proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp
            .deserializeBinaryFromReader
        );
        msg.setPUpdateBoardDescriptionCmd(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UpdateBoardReq.Update.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UpdateBoardReq.Update.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UpdateBoardReq.Update} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UpdateBoardReq.Update.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getPUpdateBoardTitleCmd();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp
        .serializeBinaryToWriter
    );
  }
  f = message.getPUpdateBoardDescriptionCmd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp
        .serializeBinaryToWriter
    );
  }
};

/**
 * optional PUpdateBoardTitleOp p_update_board_title_cmd = 1;
 * @return {?proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp}
 */
proto.taska.proto.UpdateBoardReq.Update.prototype.getPUpdateBoardTitleCmd = function () {
  return /** @type{?proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp} */ (jspb.Message.getWrapperField(
    this,
    proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp,
    1
  ));
};

/**
 * @param {?proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp|undefined} value
 * @return {!proto.taska.proto.UpdateBoardReq.Update} returns this
 */
proto.taska.proto.UpdateBoardReq.Update.prototype.setPUpdateBoardTitleCmd = function (
  value
) {
  return jspb.Message.setOneofWrapperField(
    this,
    1,
    proto.taska.proto.UpdateBoardReq.Update.oneofGroups_[0],
    value
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.taska.proto.UpdateBoardReq.Update} returns this
 */
proto.taska.proto.UpdateBoardReq.Update.prototype.clearPUpdateBoardTitleCmd = function () {
  return this.setPUpdateBoardTitleCmd(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.taska.proto.UpdateBoardReq.Update.prototype.hasPUpdateBoardTitleCmd = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional PUpdateBoardDescriptionOp p_update_board_description_cmd = 2;
 * @return {?proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp}
 */
proto.taska.proto.UpdateBoardReq.Update.prototype.getPUpdateBoardDescriptionCmd = function () {
  return /** @type{?proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp} */ (jspb.Message.getWrapperField(
    this,
    proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp,
    2
  ));
};

/**
 * @param {?proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp|undefined} value
 * @return {!proto.taska.proto.UpdateBoardReq.Update} returns this
 */
proto.taska.proto.UpdateBoardReq.Update.prototype.setPUpdateBoardDescriptionCmd = function (
  value
) {
  return jspb.Message.setOneofWrapperField(
    this,
    2,
    proto.taska.proto.UpdateBoardReq.Update.oneofGroups_[0],
    value
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.taska.proto.UpdateBoardReq.Update} returns this
 */
proto.taska.proto.UpdateBoardReq.Update.prototype.clearPUpdateBoardDescriptionCmd = function () {
  return this.setPUpdateBoardDescriptionCmd(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.taska.proto.UpdateBoardReq.Update.prototype.hasPUpdateBoardDescriptionCmd = function () {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        title: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp}
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp();
  return proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp}
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string title = 1;
 * @return {string}
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp} returns this
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardTitleOp.prototype.setTitle = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        description:
          (f = msg.getDescription()) &&
          google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp}
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp();
  return proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp}
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new google_protobuf_wrappers_pb.StringValue();
        reader.readMessage(
          value,
          google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader
        );
        msg.setDescription(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};

/**
 * optional google.protobuf.StringValue description = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.prototype.getDescription = function () {
  return /** @type{?proto.google.protobuf.StringValue} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_wrappers_pb.StringValue,
    1
  ));
};

/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp} returns this
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.prototype.setDescription = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp} returns this
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.prototype.clearDescription = function () {
  return this.setDescription(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.taska.proto.UpdateBoardReq.PUpdateBoardDescriptionOp.prototype.hasDescription = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.taska.proto.UpdateBoardReq.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.UpdateBoardReq} returns this
 */
proto.taska.proto.UpdateBoardReq.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated Update updates = 2;
 * @return {!Array<!proto.taska.proto.UpdateBoardReq.Update>}
 */
proto.taska.proto.UpdateBoardReq.prototype.getUpdatesList = function () {
  return /** @type{!Array<!proto.taska.proto.UpdateBoardReq.Update>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.taska.proto.UpdateBoardReq.Update,
    2
  ));
};

/**
 * @param {!Array<!proto.taska.proto.UpdateBoardReq.Update>} value
 * @return {!proto.taska.proto.UpdateBoardReq} returns this
 */
proto.taska.proto.UpdateBoardReq.prototype.setUpdatesList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.taska.proto.UpdateBoardReq.Update=} opt_value
 * @param {number=} opt_index
 * @return {!proto.taska.proto.UpdateBoardReq.Update}
 */
proto.taska.proto.UpdateBoardReq.prototype.addUpdates = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.taska.proto.UpdateBoardReq.Update,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.taska.proto.UpdateBoardReq} returns this
 */
proto.taska.proto.UpdateBoardReq.prototype.clearUpdatesList = function () {
  return this.setUpdatesList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UpdateBoardRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UpdateBoardRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UpdateBoardRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UpdateBoardRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UpdateBoardRes}
 */
proto.taska.proto.UpdateBoardRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UpdateBoardRes();
  return proto.taska.proto.UpdateBoardRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UpdateBoardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UpdateBoardRes}
 */
proto.taska.proto.UpdateBoardRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UpdateBoardRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UpdateBoardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UpdateBoardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UpdateBoardRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

goog.object.extend(exports, proto.taska.proto);
