// source: list.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

var google_protobuf_wrappers_pb = require("google-protobuf/google/protobuf/wrappers_pb.js");
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol("proto.taska.proto.ArchiveListReq", null, global);
goog.exportSymbol("proto.taska.proto.ArchiveListRes", null, global);
goog.exportSymbol("proto.taska.proto.CreateListReq", null, global);
goog.exportSymbol("proto.taska.proto.CreateListRes", null, global);
goog.exportSymbol("proto.taska.proto.GetListReq", null, global);
goog.exportSymbol("proto.taska.proto.GetListRes", null, global);
goog.exportSymbol("proto.taska.proto.UnArchiveListReq", null, global);
goog.exportSymbol("proto.taska.proto.UnArchiveListRes", null, global);
goog.exportSymbol("proto.taska.proto.UpdateListReq", null, global);
goog.exportSymbol(
  "proto.taska.proto.UpdateListReq.PUpdateListTitleOp",
  null,
  global
);
goog.exportSymbol("proto.taska.proto.UpdateListReq.Update", null, global);
goog.exportSymbol(
  "proto.taska.proto.UpdateListReq.Update.CmdCase",
  null,
  global
);
goog.exportSymbol("proto.taska.proto.UpdateListRes", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.CreateListReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.CreateListReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.CreateListReq.displayName =
    "proto.taska.proto.CreateListReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.CreateListRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.CreateListRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.CreateListRes.displayName =
    "proto.taska.proto.CreateListRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.GetListReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.GetListReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.GetListReq.displayName = "proto.taska.proto.GetListReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.GetListRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.GetListRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.GetListRes.displayName = "proto.taska.proto.GetListRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.ArchiveListReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.ArchiveListReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.ArchiveListReq.displayName =
    "proto.taska.proto.ArchiveListReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.ArchiveListRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.ArchiveListRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.ArchiveListRes.displayName =
    "proto.taska.proto.ArchiveListRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UnArchiveListReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.UnArchiveListReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UnArchiveListReq.displayName =
    "proto.taska.proto.UnArchiveListReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UnArchiveListRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.UnArchiveListRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UnArchiveListRes.displayName =
    "proto.taska.proto.UnArchiveListRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UpdateListReq = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.taska.proto.UpdateListReq.repeatedFields_,
    null
  );
};
goog.inherits(proto.taska.proto.UpdateListReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UpdateListReq.displayName =
    "proto.taska.proto.UpdateListReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UpdateListReq.Update = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    null,
    proto.taska.proto.UpdateListReq.Update.oneofGroups_
  );
};
goog.inherits(proto.taska.proto.UpdateListReq.Update, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UpdateListReq.Update.displayName =
    "proto.taska.proto.UpdateListReq.Update";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UpdateListReq.PUpdateListTitleOp = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.UpdateListReq.PUpdateListTitleOp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UpdateListReq.PUpdateListTitleOp.displayName =
    "proto.taska.proto.UpdateListReq.PUpdateListTitleOp";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.taska.proto.UpdateListRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.taska.proto.UpdateListRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.taska.proto.UpdateListRes.displayName =
    "proto.taska.proto.UpdateListRes";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.CreateListReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.CreateListReq.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.CreateListReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.CreateListReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        boardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
        title: jspb.Message.getFieldWithDefault(msg, 2, ""),
        description:
          (f = msg.getDescription()) &&
          google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.CreateListReq}
 */
proto.taska.proto.CreateListReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.CreateListReq();
  return proto.taska.proto.CreateListReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.CreateListReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.CreateListReq}
 */
proto.taska.proto.CreateListReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setBoardId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 3:
        var value = new google_protobuf_wrappers_pb.StringValue();
        reader.readMessage(
          value,
          google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader
        );
        msg.setDescription(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.CreateListReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.CreateListReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.CreateListReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.CreateListReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getBoardId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};

/**
 * optional string board_id = 1;
 * @return {string}
 */
proto.taska.proto.CreateListReq.prototype.getBoardId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.CreateListReq} returns this
 */
proto.taska.proto.CreateListReq.prototype.setBoardId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string title = 2;
 * @return {string}
 */
proto.taska.proto.CreateListReq.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.CreateListReq} returns this
 */
proto.taska.proto.CreateListReq.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.StringValue description = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.taska.proto.CreateListReq.prototype.getDescription = function () {
  return /** @type{?proto.google.protobuf.StringValue} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_wrappers_pb.StringValue,
    3
  ));
};

/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.taska.proto.CreateListReq} returns this
 */
proto.taska.proto.CreateListReq.prototype.setDescription = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.taska.proto.CreateListReq} returns this
 */
proto.taska.proto.CreateListReq.prototype.clearDescription = function () {
  return this.setDescription(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.taska.proto.CreateListReq.prototype.hasDescription = function () {
  return jspb.Message.getField(this, 3) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.CreateListRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.CreateListRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.CreateListRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.CreateListRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.CreateListRes}
 */
proto.taska.proto.CreateListRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.CreateListRes();
  return proto.taska.proto.CreateListRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.CreateListRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.CreateListRes}
 */
proto.taska.proto.CreateListRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.CreateListRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.CreateListRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.CreateListRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.CreateListRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.taska.proto.CreateListRes.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.CreateListRes} returns this
 */
proto.taska.proto.CreateListRes.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.GetListReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.GetListReq.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.GetListReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.GetListReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.GetListReq}
 */
proto.taska.proto.GetListReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.GetListReq();
  return proto.taska.proto.GetListReq.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.GetListReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.GetListReq}
 */
proto.taska.proto.GetListReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.GetListReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.GetListReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.GetListReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.GetListReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.taska.proto.GetListReq.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.GetListReq} returns this
 */
proto.taska.proto.GetListReq.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.GetListRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.GetListRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.GetListRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.GetListRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        boardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
        title: jspb.Message.getFieldWithDefault(msg, 2, ""),
        description:
          (f = msg.getDescription()) &&
          google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.GetListRes}
 */
proto.taska.proto.GetListRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.GetListRes();
  return proto.taska.proto.GetListRes.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.GetListRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.GetListRes}
 */
proto.taska.proto.GetListRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setBoardId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 3:
        var value = new google_protobuf_wrappers_pb.StringValue();
        reader.readMessage(
          value,
          google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader
        );
        msg.setDescription(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.GetListRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.GetListRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.GetListRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.GetListRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getBoardId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};

/**
 * optional string board_id = 1;
 * @return {string}
 */
proto.taska.proto.GetListRes.prototype.getBoardId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.GetListRes} returns this
 */
proto.taska.proto.GetListRes.prototype.setBoardId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string title = 2;
 * @return {string}
 */
proto.taska.proto.GetListRes.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.GetListRes} returns this
 */
proto.taska.proto.GetListRes.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.StringValue description = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.taska.proto.GetListRes.prototype.getDescription = function () {
  return /** @type{?proto.google.protobuf.StringValue} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_wrappers_pb.StringValue,
    3
  ));
};

/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.taska.proto.GetListRes} returns this
 */
proto.taska.proto.GetListRes.prototype.setDescription = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.taska.proto.GetListRes} returns this
 */
proto.taska.proto.GetListRes.prototype.clearDescription = function () {
  return this.setDescription(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.taska.proto.GetListRes.prototype.hasDescription = function () {
  return jspb.Message.getField(this, 3) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.ArchiveListReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.ArchiveListReq.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.ArchiveListReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.ArchiveListReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.ArchiveListReq}
 */
proto.taska.proto.ArchiveListReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.ArchiveListReq();
  return proto.taska.proto.ArchiveListReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.ArchiveListReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.ArchiveListReq}
 */
proto.taska.proto.ArchiveListReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.ArchiveListReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.ArchiveListReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.ArchiveListReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.ArchiveListReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.taska.proto.ArchiveListReq.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.ArchiveListReq} returns this
 */
proto.taska.proto.ArchiveListReq.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.ArchiveListRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.ArchiveListRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.ArchiveListRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.ArchiveListRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.ArchiveListRes}
 */
proto.taska.proto.ArchiveListRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.ArchiveListRes();
  return proto.taska.proto.ArchiveListRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.ArchiveListRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.ArchiveListRes}
 */
proto.taska.proto.ArchiveListRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.ArchiveListRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.ArchiveListRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.ArchiveListRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.ArchiveListRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UnArchiveListReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UnArchiveListReq.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UnArchiveListReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UnArchiveListReq.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UnArchiveListReq}
 */
proto.taska.proto.UnArchiveListReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UnArchiveListReq();
  return proto.taska.proto.UnArchiveListReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UnArchiveListReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UnArchiveListReq}
 */
proto.taska.proto.UnArchiveListReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UnArchiveListReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UnArchiveListReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UnArchiveListReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UnArchiveListReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.taska.proto.UnArchiveListReq.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.UnArchiveListReq} returns this
 */
proto.taska.proto.UnArchiveListReq.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UnArchiveListRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UnArchiveListRes.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UnArchiveListRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UnArchiveListRes.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UnArchiveListRes}
 */
proto.taska.proto.UnArchiveListRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UnArchiveListRes();
  return proto.taska.proto.UnArchiveListRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UnArchiveListRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UnArchiveListRes}
 */
proto.taska.proto.UnArchiveListRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UnArchiveListRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UnArchiveListRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UnArchiveListRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UnArchiveListRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.taska.proto.UpdateListReq.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UpdateListReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UpdateListReq.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UpdateListReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UpdateListReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
        updatesList: jspb.Message.toObjectList(
          msg.getUpdatesList(),
          proto.taska.proto.UpdateListReq.Update.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UpdateListReq}
 */
proto.taska.proto.UpdateListReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UpdateListReq();
  return proto.taska.proto.UpdateListReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UpdateListReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UpdateListReq}
 */
proto.taska.proto.UpdateListReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = new proto.taska.proto.UpdateListReq.Update();
        reader.readMessage(
          value,
          proto.taska.proto.UpdateListReq.Update.deserializeBinaryFromReader
        );
        msg.addUpdates(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UpdateListReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UpdateListReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UpdateListReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UpdateListReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.taska.proto.UpdateListReq.Update.serializeBinaryToWriter
    );
  }
};

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.taska.proto.UpdateListReq.Update.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.taska.proto.UpdateListReq.Update.CmdCase = {
  CMD_NOT_SET: 0,
  P_UPDATE_LIST_TITLE_CMD: 1,
};

/**
 * @return {proto.taska.proto.UpdateListReq.Update.CmdCase}
 */
proto.taska.proto.UpdateListReq.Update.prototype.getCmdCase = function () {
  return /** @type {proto.taska.proto.UpdateListReq.Update.CmdCase} */ (jspb.Message.computeOneofCase(
    this,
    proto.taska.proto.UpdateListReq.Update.oneofGroups_[0]
  ));
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UpdateListReq.Update.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UpdateListReq.Update.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UpdateListReq.Update} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UpdateListReq.Update.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        pUpdateListTitleCmd:
          (f = msg.getPUpdateListTitleCmd()) &&
          proto.taska.proto.UpdateListReq.PUpdateListTitleOp.toObject(
            includeInstance,
            f
          ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UpdateListReq.Update}
 */
proto.taska.proto.UpdateListReq.Update.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UpdateListReq.Update();
  return proto.taska.proto.UpdateListReq.Update.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UpdateListReq.Update} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UpdateListReq.Update}
 */
proto.taska.proto.UpdateListReq.Update.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.taska.proto.UpdateListReq.PUpdateListTitleOp();
        reader.readMessage(
          value,
          proto.taska.proto.UpdateListReq.PUpdateListTitleOp
            .deserializeBinaryFromReader
        );
        msg.setPUpdateListTitleCmd(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UpdateListReq.Update.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UpdateListReq.Update.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UpdateListReq.Update} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UpdateListReq.Update.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getPUpdateListTitleCmd();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.taska.proto.UpdateListReq.PUpdateListTitleOp.serializeBinaryToWriter
    );
  }
};

/**
 * optional PUpdateListTitleOp p_update_list_title_cmd = 1;
 * @return {?proto.taska.proto.UpdateListReq.PUpdateListTitleOp}
 */
proto.taska.proto.UpdateListReq.Update.prototype.getPUpdateListTitleCmd = function () {
  return /** @type{?proto.taska.proto.UpdateListReq.PUpdateListTitleOp} */ (jspb.Message.getWrapperField(
    this,
    proto.taska.proto.UpdateListReq.PUpdateListTitleOp,
    1
  ));
};

/**
 * @param {?proto.taska.proto.UpdateListReq.PUpdateListTitleOp|undefined} value
 * @return {!proto.taska.proto.UpdateListReq.Update} returns this
 */
proto.taska.proto.UpdateListReq.Update.prototype.setPUpdateListTitleCmd = function (
  value
) {
  return jspb.Message.setOneofWrapperField(
    this,
    1,
    proto.taska.proto.UpdateListReq.Update.oneofGroups_[0],
    value
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.taska.proto.UpdateListReq.Update} returns this
 */
proto.taska.proto.UpdateListReq.Update.prototype.clearPUpdateListTitleCmd = function () {
  return this.setPUpdateListTitleCmd(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.taska.proto.UpdateListReq.Update.prototype.hasPUpdateListTitleCmd = function () {
  return jspb.Message.getField(this, 1) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UpdateListReq.PUpdateListTitleOp.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UpdateListReq.PUpdateListTitleOp.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UpdateListReq.PUpdateListTitleOp} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UpdateListReq.PUpdateListTitleOp.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        title: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UpdateListReq.PUpdateListTitleOp}
 */
proto.taska.proto.UpdateListReq.PUpdateListTitleOp.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UpdateListReq.PUpdateListTitleOp();
  return proto.taska.proto.UpdateListReq.PUpdateListTitleOp.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UpdateListReq.PUpdateListTitleOp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UpdateListReq.PUpdateListTitleOp}
 */
proto.taska.proto.UpdateListReq.PUpdateListTitleOp.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UpdateListReq.PUpdateListTitleOp.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UpdateListReq.PUpdateListTitleOp.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UpdateListReq.PUpdateListTitleOp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UpdateListReq.PUpdateListTitleOp.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string title = 1;
 * @return {string}
 */
proto.taska.proto.UpdateListReq.PUpdateListTitleOp.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.UpdateListReq.PUpdateListTitleOp} returns this
 */
proto.taska.proto.UpdateListReq.PUpdateListTitleOp.prototype.setTitle = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.taska.proto.UpdateListReq.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.taska.proto.UpdateListReq} returns this
 */
proto.taska.proto.UpdateListReq.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated Update updates = 2;
 * @return {!Array<!proto.taska.proto.UpdateListReq.Update>}
 */
proto.taska.proto.UpdateListReq.prototype.getUpdatesList = function () {
  return /** @type{!Array<!proto.taska.proto.UpdateListReq.Update>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.taska.proto.UpdateListReq.Update,
    2
  ));
};

/**
 * @param {!Array<!proto.taska.proto.UpdateListReq.Update>} value
 * @return {!proto.taska.proto.UpdateListReq} returns this
 */
proto.taska.proto.UpdateListReq.prototype.setUpdatesList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.taska.proto.UpdateListReq.Update=} opt_value
 * @param {number=} opt_index
 * @return {!proto.taska.proto.UpdateListReq.Update}
 */
proto.taska.proto.UpdateListReq.prototype.addUpdates = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.taska.proto.UpdateListReq.Update,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.taska.proto.UpdateListReq} returns this
 */
proto.taska.proto.UpdateListReq.prototype.clearUpdatesList = function () {
  return this.setUpdatesList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.taska.proto.UpdateListRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.taska.proto.UpdateListRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.taska.proto.UpdateListRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.taska.proto.UpdateListRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.taska.proto.UpdateListRes}
 */
proto.taska.proto.UpdateListRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.taska.proto.UpdateListRes();
  return proto.taska.proto.UpdateListRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.taska.proto.UpdateListRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.taska.proto.UpdateListRes}
 */
proto.taska.proto.UpdateListRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.taska.proto.UpdateListRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.taska.proto.UpdateListRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.taska.proto.UpdateListRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.taska.proto.UpdateListRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

goog.object.extend(exports, proto.taska.proto);
